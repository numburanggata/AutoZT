import ipaddress

def classify_subnets(ip_list):
    subnets = {}
    
    for ip in ip_list:
        ip_addr = ipaddress.ip_address(ip)
        # subnet_found = False
        
        for subnet in subnets:
            if ip_addr in subnet:
                print(ip_addr, subnet)
                subnets[subnet].append(ip)
                # subnet_found = True
                # print(subnets)
                
        
        # if not subnet_found:
        for cidr in range(29, 21, -1): 
            subnet = ipaddress.ip_network(f"{ip}/{cidr}", strict=False)
            # if any(ipaddress.ip_address(ip) in subnet for ip in ip_list):
            if subnet not in subnets:
                subnets[subnet] = [ip]
            else:
                pass
                # print(subnet, ip, cidr)

    # print(subnets)
    for subnet, ips in subnets.items():
        cidr = (str(subnet).split('/'))[1]
        available_host = ((32 - int(cidr)) ** 2) - 2 
        print(f"Subnet {subnet}: {ips} " + str(100*(len(ips)/available_host)) + "%")
    # print(subnets)
    # cidr_ = ipaddress.ip_address
    # 
    # print(host_percentage)
    # return subnets

# Example usage:
ip_list = [
    '192.168.1.10', 
    '192.168.1.20', 
    '192.168.2.30',
    '192.168.1.15', 
    '192.168.2.40',
    '192.168.3.1',
    '192.168.3.2',
    '192.168.3.3',
    '192.168.3.10', 
    '10.0.0.1']

classified_subnets = classify_subnets(ip_list)
# for subnet, ips in classified_subnets.items():
    # print(f"Subnet {subnet}: {ips}")
